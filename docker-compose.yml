services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: the_agents_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - property_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: the_agents_redis
    ports:
      - "6379:6379"
    networks:
      - property_network

  # pgAdmin Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: the_agents_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE:-False}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - property_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: the_agents_backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SECRET_KEY: ${SECRET_KEY}
      PYTHONPATH: /app
      WATCHFILES_FORCE_POLLING: true
      PYTHONUNBUFFERED: 1
      LOG_LEVEL: DEBUG
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - uploaded_files:/app/uploads
      # Exclude certain directories from being watched
      - /app/__pycache__
      - /app/.pytest_cache
    networks:
      - property_network
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - __pycache__/
            - .git/
            - .pytest_cache/

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: the_agents_frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: ${VITE_API_URL}
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - /app/dist
    depends_on:
      - backend
    networks:
      - property_network
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .git/
            - dist/
            - .next/

volumes:
  postgres_data:
  uploaded_files:
  pgadmin_data:

networks:
  property_network:
    driver: bridge 